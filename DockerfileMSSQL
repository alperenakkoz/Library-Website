# DockerfileMSSQL
FROM mcr.microsoft.com/mssql/server:2022-latest

ENV ACCEPT_EULA="Y"

# Create backup directory
RUN mkdir -p /var/opt/mssql/backup 

# Copy backup file
COPY backup/Library.bak /var/opt/mssql/backup/

# Now is the tricky part. The server needs to be started for running sqlcmd commands
# It needs to run in background because if it's in the foreground other commands won't run
# Because it's in bg, I need to add an until loop to know when it'll actually starts to run
# Finally run the backup command
CMD /bin/bash -c " \
    /opt/mssql/bin/sqlservr & \
    echo 'Waiting for SQL Server to be ready...' && \
    until /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P '$MSSQL_SA_PASSWORD' -Q 'SELECT 1' &> /dev/null; do \
        echo 'SQL Server is starting up...' && sleep 1; \
    done && \
    echo 'SQL Server is ready! Restoring database...' && \
    /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P '$MSSQL_SA_PASSWORD' -Q \"RESTORE DATABASE Library FROM DISK = '/var/opt/mssql/backup/Library.bak' WITH MOVE 'Library' TO '/var/opt/mssql/data/Library.mdf', MOVE 'Library_log' TO '/var/opt/mssql/data/Library_log.ldf', REPLACE\" && \
    echo 'Database restored successfully!' && \
    tail -f /dev/null"
