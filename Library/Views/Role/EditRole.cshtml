@model Library.ViewModels.EditRoleViewModel

@{
    ViewData["Title"] = Localizer["Title"];
}

<h1>@Localizer["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Localizer["Save"]" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-primary">@Localizer["Cancel"]</a>
            </div>
        </form>
        <br />
        <div class="card">
            <div class="card-header">
                <h3>@Localizer["UserTitle"]</h3>
            </div>
            <div class="card-body">
                @if (Model.Users != null && Model.Users.Any())
                {
                    foreach (var user in Model.Users)
                    {
                        <h5 class="card-title">@user</h5>
                    }
                }
                else
                {
                    <h5 class="card-title">@Localizer["NotFound"]</h5>
                }
            </div>

            <div class="card-footer">
                <a asp-controller="Role" asp-action="EditUsersRole"
                   asp-route-roleId="@Model.Id" class="btn btn-primary">
                    @Localizer["AddOrRemove"]
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
